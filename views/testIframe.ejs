<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title></title>
    </head>
    <body style="white-space: pre-wrap;">
      <h2>This is the iFrame!</h2>
      <h4>
        Start js here
        <%
        let returnedData = [];
        let currentReturnIndex = -1;
        %>

        <%
        let standInString = `function factorial(`;
        for(let i = 0; i < tomeDataKey.parameters.length; i++) {
          standInString += tomeDataKey.parameters[i];
          if(i+1<tomeDataKey.parameters.length) {
            standInString += ", ";
          };
        };
        standInString += `) { ${tomeDataKey.jsText}}`;
        %>

        <%=standInString%>
        <%eval(standInString)%>
        <% console.log(factorial(6,-1)); %>

        make this a string

        eval(  function <%=tomeDataKey.fName%> (<% for(let i = 0; i < tomeDataKey.parameters.length; i++) {%><%=tomeDataKey.parameters[i]%><%if(i+1<tomeDataKey.parameters.length){%><%=", "%><%}%><%}%>) {
          currentReturnIndex++;
          returnedData.push("");
          let thisFunctionsIndex = currentReturnIndex;
          let thisFunctionsOutputObject = {};
          <% for(let i = 0; i < tomeDataKey.parameters.length; i++) {%>
          thisFunctionsOutputObject.param<%=i%>Data = <%=tomeDataKey.parameters[i]%>;
          <%}%>
          let data = standIn(<% for(let i = 0; i < tomeDataKey.parameters.length; i++) {%><%=tomeDataKey.parameters[i]%><%if(i+1<tomeDataKey.parameters.length){%><%=", "%><%}%><%}%>);
          thisFunctionsOutputObject.returnedData = data;
          returnedData[thisFunctionsIndex] = thisFunctionsOutputObject;
          return data;
        };

        Now run everything!
        standIn(6, -1);

        console.log(returnedData);

        Eventually, send message to run.ejs here (message content = returnedData)


      </h4>

    </body>
</html>
